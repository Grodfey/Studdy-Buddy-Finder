"""
/***************************************************************************************
*  REFERENCES
*  Title: Tutorial: Implementing a chat server
*  Author: Channels Docs
*  Date: 11/08/2022
*  URL: https://channels.readthedocs.io/en/latest/tutorial/part_1.html
*
*  Title: Tutorial: Implementing a chat server
*
***************************************************************************************/
"""
"""
Django settings for basesite project.

Generated by 'django-admin startproject' using Django 4.1.1

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dj_database_url import parse as parse_db

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_ae-6l_ywxn(m)n^=yx%9_&!@cde(*zk0%sa4fta2d58r^j5%v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'https://cs3240-b06-f22-studybuddy.herokuapp.com/'
]

# https://stackoverflow.com/questions/70285834/forbidden-403-csrf-verification-failed-request-aborted-reason-given-for-fail
CSRF_TRUSTED_ORIGINS = ['https://cs3240-b06-f22-studybuddy.herokuapp.com']

# List dependencies for usage
INSTALLED_APPS = [
    'chat',
    'daphne',
    'channels',
    'index.apps.IndexConfig',
    'django.contrib.admin',
    'basesite',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # "crispy_forms",
    # Use django-bootstrap-v5 with django-crispy-forms instead crispy-bootstrap5
    # "crispy_bootstrap5",
    "bootstrap5",
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'basesite.urls'

TEMPLATES = [
{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages',
        ],
        'libraries': {
            'my_tags': 'app.templatetags.blog_tags',
            # 'bootstrap5': 'crispy_bootstrap5.bootstrap5'
        }
    },
},
]
TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [BASE_DIR / 'templates'],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages',
        ],
        'libraries': {
            'concat': 'index.templatetags.tags',
            'grep': 'index.templatetags.filters',
        }
    },
},]

WSGI_APPLICATION = 'basesite.wsgi.application'
ASGI_APPLICATION = "basesite.asgi.application"

# Use Redis to cache multiple chat room instances
# Configure channel layer information
# # # Attempt to connect to HEROKU redis addon
try: 
    CHANNEL_LAYERS = { "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": { "hosts": [ os.environ['REDIS_URL'] ] },
    }}
# # # Fallback on using localhost for local testing
# # # # https://stackoverflow.com/a/64227600
except KeyError:
    CHANNEL_LAYERS = { "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {
    'default':
        parse_db(os.environ.get(
        # Attempt to connect to HEROKU postgresql addon
            'DATABASE_URL',
        # Fallback to sqlite3 for local testing
            f'sqlite:///{BASE_DIR / "db.sqlite3"}'))
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {   'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'    },
    {   'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'              },
    {   'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'             },
    {   'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'            },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#may need to change
SITE_ID=1
# Activate HEROKU
if 'HEROKU' in os.environ:
    try:
        import django_heroku
    except ImportError:
        try:
            import django_on_heroku as django_heroku
        except ImportError:
            found = False
    django_heroku.settings(locals())
    SITE_ID = 3
else:
    SITE_ID = 2


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        "APP": {
            "client_id": '889819348621-42t1tlhkpd4pphsmaplijlv0f7q3a5ar.apps.googleusercontent.com',
            "secret": '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'
        },
        'SCOPE': [ 'profile', 'email', ],
        'AUTH_PARAMS': { 'access_type': 'online', }
    }
}

ACCOUNT_ADAPTER = "basesite.adapter.MyLoginAccountAdapter"
SOCIALACCOUNT_ADAPTER = 'basesite.adapter.MySocialAccountAdapter'
SOCIALACCOUNT_LOGIN_ON_GET=True
SOCIALACCOUNT_AUTO_SIGNUP = True
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
